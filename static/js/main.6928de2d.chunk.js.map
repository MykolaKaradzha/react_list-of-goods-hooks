{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","NONE","sortedBy","setSortedBy","isReversed","setIsReversed","visibleGoods","goods","Array","from","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getGoods","handleSortButtons","sortType","className","type","Classname","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,mEAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAWL,IAuBaE,EAAgB,WAC3B,MAAgCC,mBAAmBH,EAASI,MAA5D,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCH,oBAAkB,GAAtD,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EA1BS,SACfC,EADe,GAGX,IADFL,EACC,EADDA,SAAUE,EACT,EADSA,WAENE,EAAeE,MAAMC,KAAKF,GAgBhC,OAdAD,EAAaI,MAAK,SAACC,EAAIC,GACrB,OAAQV,GACN,KAAKL,EAASgB,SACZ,OAAOF,EAAGG,cAAcF,GAC1B,KAAKf,EAASkB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAGTZ,GACFE,EAAaW,UAGRX,EAMcY,CACnBpB,EAAiB,CAAEI,WAAUE,eAGzBe,EAAoB,SAACC,GAAD,OAAwB,WAChDjB,EAAYiB,KAYd,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAU,iBAAkB,CACrC,WAAYrB,IAAaL,EAASgB,WAEpCW,QAASL,EAAkBtB,EAASgB,UALtC,iCAUA,wBACES,KAAK,SACLD,UAAWE,IAAU,oBAAqB,CACxC,WAAYrB,IAAaL,EAASkB,SAEpCS,QAASL,EAAkBtB,EAASkB,QALtC,4BAUA,wBACEO,KAAK,SACLD,UAAWE,IAAU,oBAAqB,CACxC,YAAanB,IAEfoB,QAhCoB,WAC1BnB,GAAeD,IA0BX,sBAUEA,GAAcF,IAAaL,EAASI,OACpC,wBACEqB,KAAK,SACLD,UAAU,4BACVG,QA9CgB,WACxBrB,EAAYN,EAASI,MACrBI,GAAc,IAyCR,sBAUJ,6BACGC,EAAamB,KACZ,SAAAC,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCnH1CC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.6928de2d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport Classname from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortedBy: SortType;\n  isReversed: boolean;\n};\n\nconst getGoods = (\n  goods: string[],\n  { sortedBy, isReversed }: ReorderOptions,\n) => {\n  const visibleGoods = Array.from(goods);\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortedBy) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n};\n\nexport const App: React.FC = () => {\n  const [sortedBy, setSortedBy] = useState<SortType>(SortType.NONE);\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n  const visibleGoods = getGoods(\n    goodsFromServer, { sortedBy, isReversed },\n  );\n\n  const handleSortButtons = (sortType: SortType) => () => {\n    setSortedBy(sortType);\n  };\n\n  const handleResetButton = () => {\n    setSortedBy(SortType.NONE);\n    setIsReversed(false);\n  };\n\n  const handleReverseButton = () => {\n    setIsReversed(!isReversed);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={Classname('button is-info', {\n            'is-light': sortedBy !== SortType.ALPHABET,\n          })}\n          onClick={handleSortButtons(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={Classname('button is-success', {\n            'is-light': sortedBy !== SortType.LENGTH,\n          })}\n          onClick={handleSortButtons(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={Classname('button is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={handleReverseButton}\n        >\n          Reverse\n        </button>\n\n        {(isReversed || sortedBy !== SortType.NONE) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleResetButton}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(\n          good => <li data-cy=\"Good\" key={good}>{good}</li>,\n        )}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}